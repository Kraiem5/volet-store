 const handleOptionSelected = (questionTitle, option) => {
    setSelectedOptions((prevSelectedOptions) => {
      const updatedSelectedOptions = { ...prevSelectedOptions };
  
      // Fonction récursive pour supprimer les sous-options et sous-questions
      const removeSubOptionsAndQuestions = (opt) => {
        if (opt.questions && opt.questions.length > 0) {
          opt.questions.forEach((subQuestion) => {
            const subQuestionPrice = updatedSelectedOptions[subQuestion.title]?.price || 0;
            if (!updatedSelectedOptions[subQuestion.title]?.subtracted) {
              delete updatedSelectedOptions[subQuestion.title];
              handleUpdateTotalPrice(subQuestion.title, -subQuestionPrice);
              updatedSelectedOptions[subQuestion.title] = {
                ...subQuestion,
                subtracted: true,
              };
            }
  
            if (subQuestion.options && subQuestion.options.length > 0) {
              subQuestion.options.forEach((subOption) => {
                const subOptionPrice = updatedSelectedOptions[subOption.title]?.price || 0;
                if (!updatedSelectedOptions[subOption.title]?.subtracted) {
                  delete updatedSelectedOptions[subOption.title];
                  handleUpdateTotalPrice(subOption.title, -subOptionPrice);
                  updatedSelectedOptions[subOption.title] = {
                    ...subOption,
                    subtracted: true,
                  };
                }
  
                // Si cette sous-option a également des sous-questions, supprimez-les également
                if (subOption.questions && subOption.questions.length > 0) {
                  subOption.questions.forEach((subSubQuestion) => {
                    const subSubQuestionPrice = updatedSelectedOptions[subSubQuestion.title]?.price || 0;
                    if (!updatedSelectedOptions[subSubQuestion.title]?.subtracted) {
                      delete updatedSelectedOptions[subSubQuestion.title];
                      handleUpdateTotalPrice(subSubQuestion.title, -subSubQuestionPrice);
                      updatedSelectedOptions[subSubQuestion.title] = {
                        ...subSubQuestion,
                        subtracted: true,
                      };
                    }
                  });
                }
              });
            }
  
            removeSubOptionsAndQuestions(subQuestion);
          });
        }
      };
  
      // Supprimer toutes les sous-questions et sous-options de l'option précédemment sélectionnée
      const previousOption = updatedSelectedOptions[questionTitle];
      if (previousOption) {
        removeSubOptionsAndQuestions(previousOption);
      }
  
      updatedSelectedOptions[questionTitle] = option;
  
      // Ajouter le prix de la nouvelle option au total
      handleUpdateTotalPrice(questionTitle, option.price);
  
      return updatedSelectedOptions;
    });
    setSelectedOptionDescription(option.description || selectedOptionDescription);
  };